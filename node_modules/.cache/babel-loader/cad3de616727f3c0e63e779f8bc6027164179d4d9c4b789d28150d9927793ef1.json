{"ast":null,"code":"var _jsxFileName = \"/Users/kruti/Documents/react-cards-pokemon/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks/useAxios\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s();\n  const [response, error] = useAxios(\"\");\n  const url = \"https://deckofcardsapi.com/api/deck/new/draw/\";\n  console.log(response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"vJkb3rEH6JZcYxkKwgUmK/KkXPw=\", false, function () {\n  return [useAxios];\n});\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\n// const [cards, setCards] = useState([]);\n//   const addCard = async () => {\n//     const response = await axios.get(\n//       \"https://deckofcardsapi.com/api/deck/new/draw/\"\n//     );\n//     setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//   };\n\n// {re.map(cardData => (\n// <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n// ))}\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","v1","uuid","axios","PlayingCard","useAxios","jsxDEV","_jsxDEV","CardTable","_s","response","error","url","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fetchData","_c","defaultProps","$RefreshReg$"],"sources":["/Users/kruti/Documents/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {v1 as uuid} from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks/useAxios\"\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [response,error] = useAxios(\"\")\n  const url=\"https://deckofcardsapi.com/api/deck/new/draw/\"\n  console.log(response)\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={fetchData}>Add a playing card!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        \n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n// const [cards, setCards] = useState([]);\n//   const addCard = async () => {\n//     const response = await axios.get(\n//       \"https://deckofcardsapi.com/api/deck/new/draw/\"\n//     );\n//     setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//   };\n\n// {re.map(cardData => (\n  // <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n// ))}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAACC,KAAK,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAMO,GAAG,GAAC,+CAA+C;EACzDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,oBACEH,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bb,OAAA;MAAAS,QAAA,eACET,OAAA;QAAQc,OAAO,EAAEC,SAAU;QAAAN,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAfQD,SAAS;EAAA,QACSH,QAAQ;AAAA;AAAAkB,EAAA,GAD1Bf,SAAS;AAiBlBA,SAAS,CAACgB,YAAY,GAAG,CAAC,CAAC;AAE3B,eAAehB,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE;AACF;AAAA,IAAAe,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}