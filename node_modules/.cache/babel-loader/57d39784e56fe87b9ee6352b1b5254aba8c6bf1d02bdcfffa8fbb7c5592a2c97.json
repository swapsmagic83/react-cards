{"ast":null,"code":"/* Select a random element from values array. */\nfunction choice(values) {\n  const randIdx = Math.floor(Math.random() * values.length);\n  return values[randIdx];\n}\nfunction getPokemon(data) {\n  return {\n    id: uuid(),\n    front: data.sprites.front_default,\n    back: data.sprites.back_default,\n    name: data.name,\n    stats: data.stats.map(stat => ({\n      value: stat.base_stat,\n      name: stat.stat.name\n    }))\n  };\n}\nexport { choice, getPokemon };","map":{"version":3,"names":["choice","values","randIdx","Math","floor","random","length","getPokemon","data","id","uuid","front","sprites","front_default","back","back_default","name","stats","map","stat","value","base_stat"],"sources":["/Users/kruti/Documents/react-cards-pokemon/src/helpers.js"],"sourcesContent":["/* Select a random element from values array. */\nfunction choice(values) {\n  const randIdx = Math.floor(Math.random() * values.length);\n  return values[randIdx];\n}\n\nfunction getPokemon(data) {\n  return {\n    id: uuid(),\n    front: data.sprites.front_default,\n    back: data.sprites.back_default,\n    name: data.name,\n    stats: data.stats.map(stat => ({\n      value: stat.base_stat,\n      name: stat.stat.name\n    }))\n  };\n}\n\nexport { choice,getPokemon };"],"mappings":"AAAA;AACA,SAASA,MAAMA,CAACC,MAAM,EAAE;EACtB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,MAAM,CAACK,MAAM,CAAC;EACzD,OAAOL,MAAM,CAACC,OAAO,CAAC;AACxB;AAEA,SAASK,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAO;IACLC,EAAE,EAAEC,IAAI,CAAC,CAAC;IACVC,KAAK,EAAEH,IAAI,CAACI,OAAO,CAACC,aAAa;IACjCC,IAAI,EAAEN,IAAI,CAACI,OAAO,CAACG,YAAY;IAC/BC,IAAI,EAAER,IAAI,CAACQ,IAAI;IACfC,KAAK,EAAET,IAAI,CAACS,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;MAC7BC,KAAK,EAAED,IAAI,CAACE,SAAS;MACrBL,IAAI,EAAEG,IAAI,CAACA,IAAI,CAACH;IAClB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,SAAShB,MAAM,EAACO,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}