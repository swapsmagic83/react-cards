{"ast":null,"code":"var _jsxFileName = \"/Users/kruti/Documents/react-cards-pokemon/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { getCard } from \"./helpers\";\nimport { useAxios, useLocalStorage } from \"./hooks/useAxios\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s();\n  const [cards, addCard, clearCards] = useAxios('cards', \"https://deckofcardsapi.com/api/deck/new/draw/\");\n  if (cards[0]) {\n    console.log(\"CARD:\", cards[0]);\n    console.log(cards[0].card.deck_id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addCard(getCard),\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCards,\n        children: \"Clear Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: card.card.image\n      }, card.card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"vSbVflgNTy+cmCbD9ZJKbPNjzas=\", false, function () {\n  return [useAxios];\n});\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","v1","uuid","axios","PlayingCard","getCard","useAxios","useLocalStorage","jsxDEV","_jsxDEV","CardTable","_s","cards","addCard","clearCards","console","log","card","deck_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","front","image","id","_c","defaultProps","$RefreshReg$"],"sources":["/Users/kruti/Documents/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {v1 as uuid} from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { getCard } from \"./helpers\";\nimport {useAxios,useLocalStorage} from \"./hooks/useAxios\"\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n \n  const [cards, addCard,clearCards] = useAxios('cards',\"https://deckofcardsapi.com/api/deck/new/draw/\" )\n  if(cards[0]){\n  console.log(\"CARD:\",cards[0])\n  console.log(cards[0].card.deck_id)\n  }\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={()=>addCard(getCard)}>Add a playing card!</button>\n        <button onClick={clearCards}>Clear Table</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(card =>(\n          \n          <PlayingCard key={card.card.id} front={card.card.image}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,SAASC,OAAO,QAAQ,WAAW;AACnC,SAAQC,QAAQ,EAACC,eAAe,QAAO,kBAAkB;;AAEzD;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,OAAO,EAAC,+CAAgD,CAAC;EACtG,IAAGM,KAAK,CAAC,CAAC,CAAC,EAAC;IACZG,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7BG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACK,IAAI,CAACC,OAAO,CAAC;EAClC;EACA,oBACET,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BX,OAAA;MAAAW,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAQgB,OAAO,EAAEA,CAAA,KAAIZ,OAAO,CAACR,OAAO,CAAE;QAAAe,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnEf,OAAA;QAAQgB,OAAO,EAAEX,UAAW;QAAAM,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNf,OAAA;MAAKU,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCR,KAAK,CAACc,GAAG,CAACT,IAAI,iBAEbR,OAAA,CAACL,WAAW;QAAoBuB,KAAK,EAAEV,IAAI,CAACA,IAAI,CAACW;MAAM,GAArCX,IAAI,CAACA,IAAI,CAACY,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAtBQD,SAAS;EAAA,QAEoBJ,QAAQ;AAAA;AAAAwB,EAAA,GAFrCpB,SAAS;AAwBlBA,SAAS,CAACqB,YAAY,GAAG,CAAC,CAAC;AAE3B,eAAerB,SAAS;AAAC,IAAAoB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}