{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useLocalStorage = (key, initialValue = []) => {\n  _s();\n  const [value, setValue] = useState(initialValue);\n  if (window.localStorage.getItem(key)) {\n    initialValue = JSON.parse(window.localStorage.getItem(key));\n  }\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n};\n_s(useLocalStorage, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\nconst useAxios = (key, url) => {\n  _s2();\n  const [responses, setResponses] = useLocalStorage(key);\n  const addCard = async () => {\n    const res = await axios.get(url);\n    // const card =res.data.cards[0] working for deck\n    const card = res.data.card.results;\n    setResponses(c => [...c, {\n      card\n    }]);\n    console.log(card);\n  };\n  const clearResponses = () => setResponses([]);\n  return [responses, addCard, clearResponses];\n};\n_s2(useAxios, \"LeqIBh0NyjOqfE3JJ/xUPGYAqSA=\", false, function () {\n  return [useLocalStorage];\n});\nexport { useAxios, useLocalStorage };","map":{"version":3,"names":["React","useEffect","useState","axios","useLocalStorage","key","initialValue","_s","value","setValue","window","localStorage","getItem","JSON","parse","setItem","stringify","useAxios","url","_s2","responses","setResponses","addCard","res","get","card","data","results","c","console","log","clearResponses"],"sources":["/Users/kruti/Documents/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useLocalStorage = (key,initialValue=[]) =>{\n    const [value, setValue] = useState(initialValue)\n    if(window.localStorage.getItem(key)){\n        initialValue = JSON.parse(window.localStorage.getItem(key))\n    }\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(value))\n      }, [key, value])\n      return [value,setValue]\n}\nconst useAxios = (key,url) => {\n    const [responses, setResponses] = useLocalStorage(key)\n            const addCard = async () =>{\n                const res = await axios.get(url)\n                // const card =res.data.cards[0] working for deck\n                const card = res.data.card.results\n                setResponses(c =>[\n                    ...c,{card}\n                    ])\n                console.log(card)\n\n            }\n            const clearResponses = () => setResponses([]);\n       return [responses, addCard,clearResponses]\n  \n}\nexport  {useAxios, useLocalStorage}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAACC,YAAY,GAAC,EAAE,KAAI;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACI,YAAY,CAAC;EAChD,IAAGI,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,EAAC;IAChCC,YAAY,GAAGO,IAAI,CAACC,KAAK,CAACJ,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAAC;EAC/D;EACAJ,SAAS,CAAC,MAAM;IACZS,MAAM,CAACC,YAAY,CAACI,OAAO,CAACV,GAAG,EAAEQ,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACzD,CAAC,EAAE,CAACH,GAAG,EAAEG,KAAK,CAAC,CAAC;EAChB,OAAO,CAACA,KAAK,EAACC,QAAQ,CAAC;AAC7B,CAAC;AAAAF,EAAA,CATKH,eAAe;AAUrB,MAAMa,QAAQ,GAAGA,CAACZ,GAAG,EAACa,GAAG,KAAK;EAAAC,GAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,eAAe,CAACC,GAAG,CAAC;EAC9C,MAAMiB,OAAO,GAAG,MAAAA,CAAA,KAAW;IACvB,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACN,GAAG,CAAC;IAChC;IACA,MAAMO,IAAI,GAAGF,GAAG,CAACG,IAAI,CAACD,IAAI,CAACE,OAAO;IAClCN,YAAY,CAACO,CAAC,IAAG,CACb,GAAGA,CAAC,EAAC;MAACH;IAAI,CAAC,CACV,CAAC;IACNI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAErB,CAAC;EACD,MAAMM,cAAc,GAAGA,CAAA,KAAMV,YAAY,CAAC,EAAE,CAAC;EAClD,OAAO,CAACD,SAAS,EAAEE,OAAO,EAACS,cAAc,CAAC;AAEjD,CAAC;AAAAZ,GAAA,CAfKF,QAAQ;EAAA,QACwBb,eAAe;AAAA;AAerD,SAASa,QAAQ,EAAEb,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}